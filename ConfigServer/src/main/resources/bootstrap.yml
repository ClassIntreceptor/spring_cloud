
#server:
#  port: 38001

spring:
#   引入其他配置，在启动jar包时指定
#   java -jar $APP_NAME.jar --spring.config.location=./conf/,../localConfigs/ --spring.profiles.active=$PROFILE_ACTIVE > ../logs/$APP_NAME-$PROFILE_ACTIVE.out 2>& 1&
  profiles:
#    后缀名,可以在启动jar的时候指定，在idea中暂时没找到，加载本地文件配置的位置，在外部可以使用
    include: localDoubleNode
  config:
#    location: 'D:\workspace\idea\spring_cloud\localConfigs'
#    active: git
  application:
    name: ConfigServer

# 此为注册中心的配置。设置自己为服务端
#eureka:
#  client:
#    #由于注册中心的职责就是维护服务实例，所以他不需要去检索服务
#    fetch-registry: false
#    #由于该应用为注册中心，所以设置为false,代表不向注册中心注册自己
#    register-with-eureka: false

# 默认启动时的端口号，如果后面分支环境有重写，则会覆盖
server:
  port: ${config-server.node1.instance-port}
#server:
#  port: 37001
